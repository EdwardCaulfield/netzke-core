v0.2.3
FeedbackGhost will show the feedback on the top of the screen independent of the page scrolling.
Ext.Panel#loadWidget will accept null as url to delete the currently loaded widget
Bug fix: persistent_config works again

v0.2.2
js_ext_config instance method added for overwriting
Multiuser support
Using Rails.logger for logging
"config"-class method for every class inheriting Netzke::Base - for class-level configurations

v0.2.1
Fixed the path to ext-base-min.js for production mode.
Also works in Safari now.

v0.2.0
* Some re-factoring and redesign. Now simple compound widgets can be created on the fly in the controller
* Added ext_widget[:quiet] configuration option to suppress widget's feedback
* Support for extra CSS sources, similar to JS
* NETZKE_BOOT_CONFIG introduced to specify which Netzke functionality should be disabled to reduce the size of /netzke/netzke.[js|css]
* FeedbackGhost widget added - invisible widget providing feedback to the user
* netzke_widget controller class-method renamed into netzke
* JS-comments now get stripped also from the extra files that get included in the netzke-* gems.
* Permissions joined js_config
* Bug fixes

v0.1.4
Helpers added to facilitate ExtJS/netzke.js inclusion
The route defined for netzke_controller
netzke.html.erb-layout is not needed anymore, so not produced by the generator
Now compliant with Rails' forgery protection

v0.1.3
Generators fixed

v0.1.2
Fixed the bug with <widget>_class_definition returning empty string on sequential loading.

v0.1.1.1
Meta: moving from GitHub to RubyForge

v0.1.1
Inter-widget dependencies code reworked
JS-class code generation code slightly reworked

v0.1.0.2
Meta: fix outdated Manifest

v0.1.0.1 Meta work: replacing underscore with dash in the name

v0.1.0 Initial release