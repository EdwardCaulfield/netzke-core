= netzke-core
Create Ext JS + Rails reusable components (widgets) with minimum effort.

This is the bare bones of the Netzke framework. Use it to build your own widgets from scratch. For pre-built widgets (like panels, grids, forms, trees, applications), see the netzke-basepack (http://github.com/skozlov/netzke-basepack) project.

The idea behind the Netzke framework is that it allows you write reusable client/server code. Create a widget, and then embed it straight to your Rails' view, load it dynamically into your Ext-based applications, or use them as building blocks for new widgets. For more info, see the links below.

== Instalation
For the latest ("edge") stuff, install as plugin (recommended!):

    rails plugin install git://github.com/skozlov/netzke-core.git
    
To generate the migrations for Netzke persistent storage:

    rails g netzke:core

Netzke assumes that your ExtJS library is in public/extjs (which may be a symbolic link):

    ln -s ~/code/sencha/ext-3.2.1 public/extjs

== Usage
Here's how to embed a Netzke widget into your Rails view.

1. In your layout, within the "head" tag, use the <tt>netzke_init</tt> helper to include all the necessary JavaScript and styles. 

    <%= netzke_init %>
    
2. In your view use the <tt>netzke</tt> helper to embed a widget. Here's an example showing how to embed a <tt>Netzke::GridPanel</tt>:

    <%= netzke :users, :class_name => "GridPanel", :model => "User" %>
    
== More info
Netzke website: http://netzke.org

Live-demo with sample code: http://demo.netzke.org

Tutorials: http://blog.writelesscode.com

Twitter: http://twitter.com/skozlov

The netzke-basepack project (pre-built full-featured widgets): http://github.com/skozlov/netzke-basepack

---

Copyright (c) 2008-2010 Sergei Kozlov, released under the MIT license